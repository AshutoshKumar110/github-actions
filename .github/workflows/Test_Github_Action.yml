# This is a basic workflow to help you get started with Actions

name: Comkit messagae action

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" , "feature-1", "feature-2"]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  code-scan:
     runs-on: ubuntu-latest
     permissions:
       security-events: write
       actions: read

     steps:
       - name: Checkout Repository
         uses: actions/checkout@v4
       - name: Setup Python 3.12.0
         uses: actions/setup-python@v4
         with:
           python-version: '3.12.0'
       - name: Install Dependency
         run: |
           python -m pip install --upgrade pip
           if [-f requirements.txt ];
           then pip install -r requirements.txt;
           fi
           # Set the `CODEQL-PYTHON` environment variable to the Python executable
           # that includes the dependencies
           echo "CODEQL_PYTHON=$(which python)" >> $GITHUB_ENV
       - name: Initialize CodeQL
         uses: github/codeql-action/init@v3
         with:
           languages: python
             # Override the default behavior so that the action doesn't attempt
             # to auto-install Python dependencies
           setup-python-dependencies: false
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'
      - name: Install Dependency
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run test cases
        run: |
          python -m unittest -v tests/test*
        
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo "${{ github.event.head_commit.message }}"
      - name: Show GitHub context   
        env: 
          GITHUB_CONTEXT: ${{ toJson(github) }}   
        run: echo "$GITHUB_CONTEXT"
        shell: bash
      - name: Send Notification to slack
        run: curl -X POST -H 'Content-type:application/json' --data '{"text":"Commit Message - ${{ github.event.head_commit.message}} and committed By ${{ github.actor }}"}' https://hooks.slack.com/services/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
      - name: Send Notification to slack
        run: curl -X POST -H 'Content-type:application/json' --data '{"blocks":[{"type":"header","text":{"type":"plain_text","text":"Github actions ðŸ˜ƒ","emoji":true}},{"type":"section","fields":[{"type":"mrkdwn","text":"*Type:*\nPush Event"},{"type":"mrkdwn","text":"*Created by:*\n${{ github.actor }}"}]},{"type":"section","text":{"type":"mrkdwn","text":"Repo Name => ${{github.repository}}"}},{"type":"section","text":{"type":"mrkdwn","text":"Branch Name => ${{github.ref_name}}"}},{"type":"section","text":{"type":"mrkdwn","text":"Commit Message => ${{github.event.commits[0].url}}"}},{"type":"section","text":{"type":"mrkdwn","text":"TimeStamp => ${{github.event.commits[0].timestamp}}"}}]}' https://hooks.slack.com/services/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
     
